SUDO(1m)                     System Manager's Manual                    SUDO(1m)

NNAAMMEE
     ssuuddoo, ssuuddooeeddiitt - execute a command as another user

SSYYNNOOPPSSIISS
     ssuuddoo --hh | --KK | --kk | --LL | --VV
     ssuuddoo --vv [--AAkknnSS] [--aa _a_u_t_h___t_y_p_e] [--gg _g_r_o_u_p _n_a_m_e | _#_g_i_d] [--pp _p_r_o_m_p_t]
          [--uu _u_s_e_r _n_a_m_e | _#_u_i_d]
     ssuuddoo --ll[_l] [--AAkknnSS] [--aa _a_u_t_h___t_y_p_e] [--gg _g_r_o_u_p _n_a_m_e | _#_g_i_d] [--pp _p_r_o_m_p_t]
          [--UU _u_s_e_r _n_a_m_e] [--uu _u_s_e_r _n_a_m_e | _#_u_i_d] [_c_o_m_m_a_n_d]
     ssuuddoo [--AAbbEEHHnnPPSS] [--aa _a_u_t_h___t_y_p_e] [--CC _f_d] [--cc _c_l_a_s_s | _-]
          [--gg _g_r_o_u_p _n_a_m_e | _#_g_i_d] [--pp _p_r_o_m_p_t] [--rr _r_o_l_e] [--tt _t_y_p_e]
          [--uu _u_s_e_r _n_a_m_e | _#_u_i_d] [VVAARR=_v_a_l_u_e] --ii | --ss [_c_o_m_m_a_n_d]
     ssuuddooeeddiitt [--AAnnSS] [--aa _a_u_t_h___t_y_p_e] [--CC _f_d] [--cc _c_l_a_s_s | _-]
              [--gg _g_r_o_u_p _n_a_m_e | _#_g_i_d] [--pp _p_r_o_m_p_t] [--uu _u_s_e_r _n_a_m_e | _#_u_i_d] file
              ...

DDEESSCCRRIIPPTTIIOONN
     ssuuddoo allows a permitted user to execute a _c_o_m_m_a_n_d as the superuser or
     another user, as specified by the _s_u_d_o_e_r_s file.  See the _C_O_M_M_A_N_D
     _E_X_E_C_U_T_I_O_N section below for more details.

     ssuuddoo determines who is an authorized user by consulting the file
     _/_e_t_c_/_s_u_d_o_e_r_s.  By running ssuuddoo with the --vv option, a user can update the
     time stamp without running a _c_o_m_m_a_n_d.  If authentication is required,
     ssuuddoo will exit if the user's password is not entered within a
     configurable time limit.  The default password prompt timeout is 5
     minutes.

     When invoked as ssuuddooeeddiitt, the --ee option (described below), is implied.

     The options are as follows:

     --AA          Normally, if ssuuddoo requires a password, it will read it from
                 the user's terminal.  If the --AA (_a_s_k_p_a_s_s) option is
                 specified, a (possibly graphical) helper program is executed
                 to read the user's password and output the password to the
                 standard output.  If the SUDO_ASKPASS environment variable is
                 set, it specifies the path to the helper program.  Otherwise,
                 the value specified by the _a_s_k_p_a_s_s option in sudoers(4) is
                 used.  If no askpass program is available, ssuuddoo will exit
                 with an error.

     --aa _t_y_p_e     The --aa (_a_u_t_h_e_n_t_i_c_a_t_i_o_n _t_y_p_e) option causes ssuuddoo to use the
                 specified authentication type when validating the user, as
                 allowed by _/_e_t_c_/_l_o_g_i_n_._c_o_n_f.  The system administrator may
                 specify a list of sudo-specific authentication methods by
                 adding an ``auth-sudo'' entry in _/_e_t_c_/_l_o_g_i_n_._c_o_n_f.  This
                 option is only available on systems that support BSD
                 authentication.

     --bb          The --bb (_b_a_c_k_g_r_o_u_n_d) option tells ssuuddoo to run the given
                 command in the background.  Note that if you use the --bb
                 option you cannot use shell job control to manipulate the
                 process.  Most interactive commands will fail to work
                 properly in background mode.

     --CC _f_d       Normally, ssuuddoo will close all open file descriptors other
                 than standard input, standard output and standard error.  The
                 --CC (_c_l_o_s_e _f_r_o_m) option allows the user to specify a starting
                 point above the standard error (file descriptor three).
                 Values less than three are not permitted.  This option is
                 only available when the administrator has enabled the
                 _c_l_o_s_e_f_r_o_m___o_v_e_r_r_i_d_e option in sudoers(4).

     --cc _c_l_a_s_s    The --cc (_c_l_a_s_s) option causes ssuuddoo to run the specified
                 command with resources limited by the specified login class.
                 The _c_l_a_s_s argument can be either a class name as defined in
                 _/_e_t_c_/_l_o_g_i_n_._c_o_n_f, or a single `-' character.  Specifying a
                 _c_l_a_s_s of - indicates that the command should be run
                 restricted by the default login capabilities for the user the
                 command is run as.  If the _c_l_a_s_s argument specifies an
                 existing user class, the command must be run as root, or the
                 ssuuddoo command must be run from a shell that is already root.
                 This option is only available on systems with BSD login
                 classes.

     --EE          The --EE (_p_r_e_s_e_r_v_e _e_n_v_i_r_o_n_m_e_n_t) option will override the
                 _e_n_v___r_e_s_e_t option in sudoers(4).  It is only available when
                 either the matching command has the SETENV tag or the _s_e_t_e_n_v
                 option is set in sudoers(4).  ssuuddoo will return an error if
                 the --EE option is specified and the user does not have
                 permission to preserve the environment.

     --ee          The --ee (_e_d_i_t) option indicates that, instead of running a
                 command, the user wishes to edit one or more files.  In lieu
                 of a command, the string "sudoedit" is used when consulting
                 the _s_u_d_o_e_r_s file.  If the user is authorized by _s_u_d_o_e_r_s, the
                 following steps are taken:

                  1.   Temporary copies are made of the files to be edited
                       with the owner set to the invoking user.

                  2.   The editor specified by the SUDO_EDITOR, VISUAL or
                       EDITOR environment variables (in that order) is run to
                       edit the temporary files.  If none of SUDO_EDITOR,
                       VISUAL or EDITOR are set, the first program listed in
                       the _e_d_i_t_o_r sudoers(4) option is used.

                  3.   If they have been modified, the temporary files are
                       copied back to their original location and the
                       temporary versions are removed.

                 If the specified file does not exist, it will be created.
                 Note that unlike most commands run by _s_u_d_o, the editor is run
                 with the invoking user's environment unmodified.  If, for
                 some reason, ssuuddoo is unable to update a file with its edited
                 version, the user will receive a warning and the edited copy
                 will remain in a temporary file.

     --gg _g_r_o_u_p    Normally, ssuuddoo runs a command with the primary group set to
                 the one specified by the password database for the user the
                 command is being run as (by default, root).  The --gg (_g_r_o_u_p)
                 option causes ssuuddoo to run the command with the primary group
                 set to _g_r_o_u_p instead.  To specify a _g_i_d instead of a _g_r_o_u_p
                 _n_a_m_e, use _#_g_i_d.  When running commands as a _g_i_d, many shells
                 require that the `#' be escaped with a backslash (`\').  If
                 no --uu option is specified, the command will be run as the
                 invoking user (not root).  In either case, the primary group
                 will be set to _g_r_o_u_p.

     --HH          The --HH (_H_O_M_E) option option sets the HOME environment
                 variable to the home directory of the target user (root by
                 default) as specified by the password database.  The default
                 handling of the HOME environment variable depends on
                 sudoers(4) settings.  By default, ssuuddoo will set HOME if
                 _e_n_v___r_e_s_e_t or _a_l_w_a_y_s___s_e_t___h_o_m_e are set, or if _s_e_t___h_o_m_e is set
                 and the --ss option is specified on the command line.

     --hh          The --hh (_h_e_l_p) option causes ssuuddoo to print a short help
                 message to the standard output and exit.

     --ii [_c_o_m_m_a_n_d]
                 The --ii (_s_i_m_u_l_a_t_e _i_n_i_t_i_a_l _l_o_g_i_n) option runs the shell
                 specified by the password database entry of the target user
                 as a login shell.  This means that login-specific resource
                 files such as _._p_r_o_f_i_l_e or _._l_o_g_i_n will be read by the shell.
                 If a command is specified, it is passed to the shell for
                 execution via the shell's --cc option.  If no command is
                 specified, an interactive shell is executed.  ssuuddoo attempts
                 to change to that user's home directory before running the
                 shell.  It also initializes the environment to a minimal set
                 of variables, similar to what is present when a user logs in.
                 The _C_o_m_m_a_n_d _e_n_v_i_r_o_n_m_e_n_t section below documents in detail how
                 the --ii option affects the environment in which a command is
                 run.

     --KK          The --KK (sure _k_i_l_l) option is like --kk except that it removes
                 the user's time stamp file entirely and may not be used in
                 conjunction with a command or other option.  This option does
                 not require a password.

     --kk [_c_o_m_m_a_n_d]
                 When used alone, the --kk (_k_i_l_l) option to ssuuddoo invalidates the
                 user's time stamp file.  The next time ssuuddoo is run a password
                 will be required.  This option does not require a password
                 and was added to allow a user to revoke ssuuddoo permissions from
                 a _._l_o_g_o_u_t file.

                 When used in conjunction with a command or an option that may
                 require a password, the --kk option will cause ssuuddoo to ignore
                 the user's time stamp file.  As a result, ssuuddoo will prompt
                 for a password (if one is required by _s_u_d_o_e_r_s) and will not
                 update the user's time stamp file.

     --LL          The --LL (_l_i_s_t defaults) option will list the parameters that
                 may be set in a _D_e_f_a_u_l_t_s line along with a short description
                 for each.  This option will be removed from a future version
                 of ssuuddoo.

     --ll[ll] [_c_o_m_m_a_n_d]
                 If no _c_o_m_m_a_n_d is specified, the --ll (_l_i_s_t) option will list
                 the allowed (and forbidden) commands for the invoking user
                 (or the user specified by the --UU option) on the current host.
                 If a _c_o_m_m_a_n_d is specified and is permitted by _s_u_d_o_e_r_s, the
                 fully-qualified path to the command is displayed along with
                 any command line arguments.  If _c_o_m_m_a_n_d is specified but not
                 allowed, ssuuddoo will exit with a status value of 1.  If the --ll
                 option is specified with an _l argument (i.e. --llll), or if --ll
                 is specified multiple times, a longer list format is used.

     --nn          The --nn (_n_o_n_-_i_n_t_e_r_a_c_t_i_v_e) option prevents ssuuddoo from prompting
                 the user for a password.  If a password is required for the
                 command to run, ssuuddoo will display an error message and exit.

     --PP          The --PP (_p_r_e_s_e_r_v_e _g_r_o_u_p _v_e_c_t_o_r) option causes ssuuddoo to preserve
                 the invoking user's group vector unaltered.  By default, ssuuddoo
                 will initialize the group vector to the list of groups the
                 target user is in.  The real and effective group IDs,
                 however, are still set to match the target user.

     --pp _p_r_o_m_p_t   The --pp (_p_r_o_m_p_t) option allows you to override the default
                 password prompt and use a custom one.  The following percent
                 (`%') escapes are supported:

                 %H  expanded to the host name including the domain name (on
                     if the machine's host name is fully qualified or the _f_q_d_n
                     option is set in sudoers(4))

                 %h  expanded to the local host name without the domain name

                 %p  expanded to the name of the user whose password is being
                     requested (respects the _r_o_o_t_p_w, _t_a_r_g_e_t_p_w, and _r_u_n_a_s_p_w
                     flags in sudoers(4))

                 %U  expanded to the login name of the user the command will
                     be run as (defaults to root unless the --uu option is also
                     specified)

                 %u  expanded to the invoking user's login name

                 %%  two consecutive `%' characters are collapsed into a
                     single `%' character

                 The prompt specified by the --pp option will override the
                 system password prompt on systems that support PAM unless the
                 _p_a_s_s_p_r_o_m_p_t___o_v_e_r_r_i_d_e flag is disabled in _s_u_d_o_e_r_s.

     --rr _r_o_l_e     The --rr (_r_o_l_e) option causes the new (SELinux) security
                 context to have the role specified by _r_o_l_e.

     --SS          The --SS (_s_t_d_i_n) option causes ssuuddoo to read the password from
                 the standard input instead of the terminal device.  The
                 password must be followed by a newline character.

     --ss [_c_o_m_m_a_n_d]
                 The --ss (_s_h_e_l_l) option runs the shell specified by the SHELL
                 environment variable if it is set or the shell as specified
                 in the password database.  If a command is specified, it is
                 passed to the shell for execution via the shell's --cc option.
                 If no command is specified, an interactive shell is executed.

     --tt _t_y_p_e     The --tt (_t_y_p_e) option causes the new (SELinux) security
                 context to have the type specified by _t_y_p_e.  If no type is
                 specified, the default type is derived from the specified
                 role.

     --UU _u_s_e_r     The --UU (_o_t_h_e_r _u_s_e_r) option is used in conjunction with the --ll
                 option to specify the user whose privileges should be listed.
                 Only root or a user with the ALL privilege on the current
                 host may use this option.

     --uu _u_s_e_r     The --uu (_u_s_e_r) option causes ssuuddoo to run the specified command
                 as a user other than _r_o_o_t.  To specify a _u_i_d instead of a
                 _u_s_e_r _n_a_m_e, _#_u_i_d.  When running commands as a _u_i_d, many shells
                 require that the `#' be escaped with a backslash (`\').  Note
                 that if the _t_a_r_g_e_t_p_w Defaults option is set (see sudoers(4)),
                 it is not possible to run commands with a uid not listed in
                 the password database.

     --VV          The --VV (_v_e_r_s_i_o_n) option causes ssuuddoo to print its version
                 string and exit.  If the invoking user is already root the --VV
                 option will display the arguments passed to configure when
                 ssuuddoo was built as well a list of the defaults ssuuddoo was
                 compiled with as well as the machine's local network
                 addresses.

     --vv          When given the --vv (_v_a_l_i_d_a_t_e) option, ssuuddoo will update the
                 user's time stamp file, authenticating the user's password if
                 necessary.  This extends the ssuuddoo timeout for another 5
                 minutes (or whatever the timeout is set to in _s_u_d_o_e_r_s) but
                 does not run a command.

     ----          The ---- option indicates that ssuuddoo should stop processing
                 command line arguments.

     Environment variables to be set for the command may also be passed on the
     command line in the form of VVAARR=_v_a_l_u_e, e.g.
     LLDD__LLIIBBRRAARRYY__PPAATTHH=_/_u_s_r_/_l_o_c_a_l_/_p_k_g_/_l_i_b.  Variables passed on the command line
     are subject to the same restrictions as normal environment variables with
     one important exception.  If the _s_e_t_e_n_v option is set in _s_u_d_o_e_r_s, the
     command to be run has the SETENV tag set or the command matched is ALL,
     the user may set variables that would otherwise be forbidden.  See
     sudoers(4) for more information.

   AAuutthheennttiiccaattiioonn aanndd llooggggiinngg
     ssuuddoo requires that most users authenticate themselves by default.  A
     password is not required if the invoking user is root, if the target user
     is the same as the invoking user, or if the authentication has been
     disabled for the user or command in the _s_u_d_o_e_r_s file.  Unlike su(1), when
     ssuuddoo requires authentication, it validates the invoking user's
     credentials, not the target user's (or root's) credentials.  This can be
     changed via the _r_o_o_t_p_w, _t_a_r_g_e_t_p_w and _r_u_n_a_s_p_w Defaults entries in _s_u_d_o_e_r_s.

     If a user who is not listed in _s_u_d_o_e_r_s tries to run a command via ssuuddoo,
     mail is sent to the proper authorities.  The address used for such mail
     is configurable via the _m_a_i_l_t_o _s_u_d_o_e_r_s Defaults entry and defaults to
     root.

     Note that mail will not be sent if an unauthorized user tries to run ssuuddoo
     with the --ll or --vv option.  This allows users to determine for themselves
     whether or not they are allowed to use ssuuddoo.

     If ssuuddoo is run by root and the SUDO_USER environment variable is set, its
     value will be used to determine who the actual user is.  This can be used
     by a user to log commands through ssuuddoo even when a root shell has been
     invoked.  It also allows the --ee option to remain useful even when invoked
     via a sudo-run script or program.  Note, however, that the _s_u_d_o_e_r_s lookup
     is still done for root, not the user specified by SUDO_USER.

     ssuuddoo uses time stamp files for credential caching.  Once a user has been
     authenticated, the time stamp is updated and the user may then use sudo
     without a password for a short period of time (5 minutes unless
     overridden by the _t_i_m_e_o_u_t option).  By default, ssuuddoo uses a tty-based
     time stamp which means that there is a separate time stamp for each of a
     user's login sessions.  The _t_t_y___t_i_c_k_e_t_s option can be disabled to force
     the use of a single time stamp for all of a user's sessions.

     ssuuddoo can log both successful and unsuccessful attempts (as well as
     errors) to syslog(3), a log file, or both.  By default, ssuuddoo will log via
     syslog(3) but this is changeable via the _s_y_s_l_o_g and _l_o_g_f_i_l_e Defaults
     settings.

     ssuuddoo also supports logging a command's input and output streams.  I/O
     logging is not on by default but can be enabled using the _l_o_g___i_n_p_u_t and
     _l_o_g___o_u_t_p_u_t Defaults flags as well as the LOG_INPUT and LOG_OUTPUT command
     tags.

   CCoommmmaanndd eennvviirroonnmmeenntt
     Since environment variables can influence program behavior, ssuuddoo provides
     a means to restrict which variables from the user's environment are
     inherited by the command to be run.  There are two distinct ways _s_u_d_o_e_r_s
     can be configured to handle with environment variables.

     By default, the _e_n_v___r_e_s_e_t option is enabled.  This causes commands to be
     executed with a new, minimal environment.  On AIX (and Linux systems
     without PAM), the environment is initialized with the contents of the
     _/_e_t_c_/_e_n_v_i_r_o_n_m_e_n_t file.  On BSD systems, if the _u_s_e___l_o_g_i_n_c_l_a_s_s option is
     enabled, the environment is initialized based on the _p_a_t_h and _s_e_t_e_n_v
     settings in _/_e_t_c_/_l_o_g_i_n_._c_o_n_f.  The new environment contains the TERM,
     PATH, HOME, MAIL, SHELL, LOGNAME, USER, USERNAME and SUDO_* variables in
     addition to variables from the invoking process permitted by the
     _e_n_v___c_h_e_c_k and _e_n_v___k_e_e_p options.  This is effectively a whitelist for
     environment variables.

     If, however, the _e_n_v___r_e_s_e_t option is disabled, any variables not
     explicitly denied by the _e_n_v___c_h_e_c_k and _e_n_v___d_e_l_e_t_e options are inherited
     from the invoking process.  In this case, _e_n_v___c_h_e_c_k and _e_n_v___d_e_l_e_t_e behave
     like a blacklist.  Since it is not possible to blacklist all potentially
     dangerous environment variables, use of the default _e_n_v___r_e_s_e_t behavior is
     encouraged.

     In all cases, environment variables with a value beginning with () are
     removed as they could be interpreted as bbaasshh functions.  The list of
     environment variables that ssuuddoo allows or denies is contained in the
     output of ``sudo -V'' when run as root.

     Note that the dynamic linker on most operating systems will remove
     variables that can control dynamic linking from the environment of setuid
     executables, including ssuuddoo.  Depending on the operating system this may
     include _RLD*, DYLD_*, LD_*, LDR_*, LIBPATH, SHLIB_PATH, and others.
     These type of variables are removed from the environment before ssuuddoo even
     begins execution and, as such, it is not possible for ssuuddoo to preserve
     them.

     As a special case, if ssuuddoo's --ii option (initial login) is specified, ssuuddoo
     will initialize the environment regardless of the value of _e_n_v___r_e_s_e_t.
     The DISPLAY, PATH and TERM variables remain unchanged; HOME, MAIL, SHELL,
     USER, and LOGNAME are set based on the target user.  On AIX (and Linux
     systems without PAM), the contents of _/_e_t_c_/_e_n_v_i_r_o_n_m_e_n_t are also included.
     On BSD systems, if the _u_s_e___l_o_g_i_n_c_l_a_s_s option is enabled, the _p_a_t_h and
     _s_e_t_e_n_v variables in _/_e_t_c_/_l_o_g_i_n_._c_o_n_f are also applied.  All other
     environment variables are removed.

     Finally, if the _e_n_v___f_i_l_e option is defined, any variables present in that
     file will be set to their specified values as long as they would not
     conflict with an existing environment variable.

CCOOMMMMAANNDD EEXXEECCUUTTIIOONN
     When ssuuddoo executes a command, the _s_u_d_o_e_r_s file specifies the execution
     envionment for the command.  Typically, the real and effective uid and
     gid are set to match those of the target user, as specified in the
     password database, and the group vector is initialized based on the group
     database (unless the --PP option was specified).

     The _s_u_d_o_e_r_s file settings affect the following execution parameters:

     oo   real and effective user ID

     oo   real and effective group ID

     oo   supplementary group IDs

     oo   the environment list

     oo   SELinux role and type

     oo   Solaris project

     oo   Solaris privileges

     oo   BSD login class

     oo   file creation mode mask (umask)

     See the _C_o_m_m_a_n_d _e_n_v_i_r_o_n_m_e_n_t section for details on how the environment
     list is constructed.

   PPrroocceessss mmooddeell
     If ssuuddoo has been configured with PAM support or if I/O logging is
     enabled, ssuuddoo must wait until the command has completed before it will
     exit.  In the case of PAM, ssuuddoo must remain running so that it can close
     the PAM session when the command is finished.  If neither PAM nor I/O
     logging are configured, ssuuddoo will execute the command without calling
     fork(2).  In either case, ssuuddoo sets up the execution environment as
     described above, and calls the execve system call (potentially in a child
     process).  If I/O logging is enabled, a new pseudo-terminal (``pty'') is
     created and a second ssuuddoo process is used to relay job control signals
     between the user's existing pty and the new pty the command is being run
     in.  This extra process makes it possible to, for example, suspend and
     resume the command.  Without it, the command would be in what POSIX terms
     an ``orphaned process group'' and it would not receive any job control
     signals.

   SSiiggnnaall hhaannddlliinngg
     If the command is run as a child of the ssuuddoo process (due to PAM or I/O
     logging), ssuuddoo will relay signals it receives to the command.  Unless the
     command is being run in a new pty, the SIGHUP, SIGINT and SIGQUIT signals
     are not relayed unless they are sent by a user process, not the kernel.
     Otherwise, the command would receive SIGINT twice every time the user
     entered control-C.  Some signals, such as SIGSTOP and SIGKILL, cannot be
     caught and thus will not be relayed to the command.  As a general rule,
     SIGTSTP should be used instead of SIGSTOP when you wish to suspend a
     command being run by ssuuddoo.

     As a special case, ssuuddoo will not relay signals that were sent by the
     command it is running.  This prevents the command from accidentally
     killing itself.  On some systems, the reboot(1m) command sends SIGTERM to
     all non-system processes other than itself before rebooting the systyem.
     This prevents ssuuddoo from relaying the SIGTERM signal it received back to
     reboot(1m), which might then exit before the system was actually rebooted,
     leaving it in a half-dead state similar to single user mode.  Note,
     however, that this check only applies to the command run by ssuuddoo and not
     any other processes that the command may create.  As a result, running a
     script that calls reboot(1m) or shutdown(1m) via ssuuddoo may cause the system
     to end up in this undefined state unless the reboot(1m) or shutdown(1m) are
     run using the eexxeecc() family of functions instead of ssyysstteemm() (which
     interposes a shell between the command and the calling process).

EEXXIITT VVAALLUUEE
     Upon successful execution of a program, the exit status from _s_u_d_o will
     simply be the exit status of the program that was executed.

     Otherwise, ssuuddoo exits with a value of 1 if there is a
     configuration/permission problem or if ssuuddoo cannot execute the given
     command.  In the latter case the error string is printed to the standard
     error.  If ssuuddoo cannot stat(2) one or more entries in the user's PATH, an
     error is printed on stderr.  (If the directory does not exist or if it is
     not really a directory, the entry is ignored and no error is printed.)
     This should not happen under normal circumstances.  The most common
     reason for stat(2) to return ``permission denied'' is if you are running
     an automounter and one of the directories in your PATH is on a machine
     that is currently unreachable.

LLOOGG FFOORRMMAATT
     ssuuddoo can log events using either syslog(3) or a simple log file.  In each
     case the log format is almost identical.

   AAcccceepptteedd ccoommmmaanndd lloogg eennttrriieess
     Commands that sudo runs are logged using the following format (split into
     multiple lines for readability):

         date hostname progname: username : TTY=ttyname ; PWD=cwd ; \
             USER=runasuser ; GROUP=runasgroup ; TSID=logid ; \
             ENV=env_vars COMMAND=command

     Where the fields are as follows:

     date          The date the command was run.  Typically, this is in the
                   format ``MMM, DD, HH:MM:SS''.  If logging via syslog(3),
                   the actual date format is controlled by the syslog daemon.
                   If logging to a file and the _l_o_g___y_e_a_r option is enabled,
                   the date will also include the year.

     hostname      The name of the host ssuuddoo was run on.  This field is only
                   present when logging via syslog(3).

     progname      The name of the program, usually _s_u_d_o or _s_u_d_o_e_d_i_t.  This
                   field is only present when logging via syslog(3).

     username      The login name of the user who ran ssuuddoo.

     ttyname       The short name of the terminal (e.g. ``console'',
                   ``tty01'', or ``pts/0'') ssuuddoo was run on, or ``unknown'' if
                   there was no terminal present.

     cwd           The current working directory that ssuuddoo was run in.

     runasuser     The user the command was run as.

     runasgroup    The group the command was run as if one was specified on
                   the command line.

     logid         An I/O log identifier that can be used to replay the
                   command's output.  This is only present when the _l_o_g___i_n_p_u_t
                   or _l_o_g___o_u_t_p_u_t option is enabled.

     env_vars      A list of environment variables specified on the command
                   line, if specified.

     command       The actual command that was executed.

     Messages are logged using the locale specified by _s_u_d_o_e_r_s___l_o_c_a_l_e, which
     defaults to the ``C'' locale.

   DDeenniieedd ccoommmmaanndd lloogg eennttrriieess
     If the user is not allowed to run the command, the reason for the denial
     will follow the user name.  Possible reasons include:

     user NOT in sudoers
        The user is not listed in the _s_u_d_o_e_r_s file.

     user NOT authorized on host
        The user is listed in the _s_u_d_o_e_r_s file but is not allowed to run
        commands on the host.

     command not allowed
        The user is listed in the _s_u_d_o_e_r_s file for the host but they are not
        allowed to run the specified command.

     3 incorrect password attempts
        The user failed to enter their password after 3 tries.  The actual
        number of tries will vary based on the number of failed attempts and
        the value of the _p_a_s_s_w_d___t_r_i_e_s _s_u_d_o_e_r_s option.

     a password is required
        The --nn option was specified but a password was required.

     sorry, you are not allowed to set the following environment variables
        The user specified environment variables on the command line that were
        not allowed by _s_u_d_o_e_r_s.

   EErrrroorr lloogg eennttrriieess
     If an error occurs, ssuuddoo will log a message and, in most cases, send a
     message to the administrator via email.  Possible errors include:

     parse error in /etc/sudoers near line N
        ssuuddoo encountered an error when parsing the specified file.  In some
        cases, the actual error may be one line above or below the line number
        listed, depending on the type of error.

     problem with defaults entries
        The _s_u_d_o_e_r_s file contains one or more unknown Defaults settings.  This
        does not prevent ssuuddoo from running, but the _s_u_d_o_e_r_s file should be
        checked using vviissuuddoo.

     timestamp owner (username): No such user
        The time stamp directory owner, as specified by the _t_i_m_e_s_t_a_m_p_o_w_n_e_r
        setting, could not be found in the password database.

     unable to open/read /etc/sudoers
        The _s_u_d_o_e_r_s file could not be opened for reading.  This can happen
        when the _s_u_d_o_e_r_s file is located on a remote file system that maps
        user ID 0 to a different value.  Normally, ssuuddoo tries to open _s_u_d_o_e_r_s
        using group permissions to avoid this problem.

     unable to stat /etc/sudoers
        The _/_e_t_c_/_s_u_d_o_e_r_s file is missing.

     /etc/sudoers is not a regular file
        The _/_e_t_c_/_s_u_d_o_e_r_s file exists but is not a regular file or symbolic
        link.

     /etc/sudoers is owned by uid N, should be 0
        The _s_u_d_o_e_r_s file has the wrong owner.

     /etc/sudoers is world writable
        The permissions on the _s_u_d_o_e_r_s file allow all users to write to it.
        The _s_u_d_o_e_r_s file must not be world-writable, the default file mode is
        0440 (readable by owner and group, writable by none).

     /etc/sudoers is owned by gid N, should be 1
        The _s_u_d_o_e_r_s file has the wrong group ownership.

     unable to open /var/adm/sudo/username/ttyname
        _s_u_d_o_e_r_s was unable to read or create the user's time stamp file.

     unable to write to /var/adm/sudo/username/ttyname
        _s_u_d_o_e_r_s was unable to write to the user's time stamp file.

     unable to mkdir to /var/adm/sudo/username
        _s_u_d_o_e_r_s was unable to create the user's time stamp directory.

   NNootteess oonn llooggggiinngg vviiaa ssyysslloogg
     By default, _s_u_d_o_e_r_s logs messages via syslog(3).  The _d_a_t_e, _h_o_s_t_n_a_m_e, and
     _p_r_o_g_n_a_m_e fields are added by the syslog daemon, not _s_u_d_o_e_r_s itself.  As
     such, they may vary in format on different systems.

     On most systems, syslog(3) has a relatively small log buffer.  To prevent
     the command line arguments from being truncated, ssuuddoo will split up log
     messages that are larger than 960 characters (not including the date,
     hostname, and the string ``sudo'').  When a message is split, additional
     parts will include the string ``(command continued)'' after the user name
     and before the continued command line arguments.

   NNootteess oonn llooggggiinngg ttoo aa ffiillee
     If the _l_o_g_f_i_l_e option is set, _s_u_d_o_e_r_s will log to a local file, such as
     _/_v_a_r_/_l_o_g_/_s_u_d_o.  When logging to a file, _s_u_d_o_e_r_s uses a format similar to
     syslog(3), with a few important differences:

     1.   The _p_r_o_g_n_a_m_e and _h_o_s_t_n_a_m_e fields are not present.

     2.   If the _l_o_g___y_e_a_r _s_u_d_o_e_r_s option is enabled, the date will also
          include the year.

     3.   Lines that are longer than _l_o_g_l_i_n_e_l_e_n characters (80 by default) are
          word-wrapped and continued on the next line with a four character
          indent.  This makes entries easier to read for a human being, but
          makes it more difficult to use grep(1) on the log files.  If the
          _l_o_g_l_i_n_e_l_e_n _s_u_d_o_e_r_s option is set to 0 (or negated with a `!'), word
          wrap will be disabled.

SSEECCUURRIITTYY NNOOTTEESS
     ssuuddoo tries to be safe when executing external commands.

     To prevent command spoofing, ssuuddoo checks "." and "" (both denoting
     current directory) last when searching for a command in the user's PATH
     (if one or both are in the PATH).  Note, however, that the actual PATH
     environment variable is _n_o_t modified and is passed unchanged to the
     program that ssuuddoo executes.

     ssuuddoo will check the ownership of its time stamp directory (_/_v_a_r_/_a_d_m_/_s_u_d_o
     by default) and ignore the directory's contents if it is not owned by
     root or if it is writable by a user other than root.  On systems that
     allow non-root users to give away files via chown(2), if the time stamp
     directory is located in a world-writable directory (e.g., _/_t_m_p), it is
     possible for a user to create the time stamp directory before ssuuddoo is
     run.  However, because ssuuddoo checks the ownership and mode of the
     directory and its contents, the only damage that can be done is to
     ``hide'' files by putting them in the time stamp dir.  This is unlikely
     to happen since once the time stamp dir is owned by root and inaccessible
     by any other user, the user placing files there would be unable to get
     them back out.

     ssuuddoo will not honor time stamps set far in the future.  Time stamps with
     a date greater than current_time + 2 * TIMEOUT will be ignored and sudo
     will log and complain.  This is done to keep a user from creating his/her
     own time stamp with a bogus date on systems that allow users to give away
     files if the time stamp directory is located in a world-writable
     directory.

     On systems where the boot time is available, ssuuddoo will ignore time stamps
     that date from before the machine booted.

     Since time stamp files live in the file system, they can outlive a user's
     login session.  As a result, a user may be able to login, run a command
     with ssuuddoo after authenticating, logout, login again, and run ssuuddoo without
     authenticating so long as the time stamp file's modification time is
     within 5 minutes (or whatever the timeout is set to in _s_u_d_o_e_r_s).  When
     the _t_t_y___t_i_c_k_e_t_s _s_u_d_o_e_r_s option is enabled, the time stamp has per-tty
     granularity but still may outlive the user's session.  On Linux systems
     where the devpts filesystem is used, Solaris systems with the devices
     filesystem, as well as other systems that utilize a devfs filesystem that
     monotonically increase the inode number of devices as they are created
     (such as Mac OS X), ssuuddoo is able to determine when a tty-based time stamp
     file is stale and will ignore it.  Administrators should not rely on this
     feature as it is not universally available.

     Please note that ssuuddoo will normally only log the command it explicitly
     runs.  If a user runs a command such as sudo su or sudo sh, subsequent
     commands run from that shell are not subject to ssuuddoo's security policy.
     The same is true for commands that offer shell escapes (including most
     editors).  If I/O logging is enabled, subsequent commands will have their
     input and/or output logged, but there will not be traditional logs for
     those commands.  Because of this, care must be taken when giving users
     access to commands via ssuuddoo to verify that the command does not
     inadvertently give the user an effective root shell.  For more
     information, please see the _P_R_E_V_E_N_T_I_N_G _S_H_E_L_L _E_S_C_A_P_E_S section in
     sudoers(4).

     To prevent the disclosure of potentially sensitive information, ssuuddoo
     disables core dumps by default while it is executing (they are re-enabled
     for the command that is run).

     For information on the security implications of _s_u_d_o_e_r_s entries, please
     see the _S_E_C_U_R_I_T_Y _N_O_T_E_S section in sudoers(4).

EENNVVIIRROONNMMEENNTT
     ssuuddoo utilizes the following environment variables:

     EDITOR           Default editor to use in --ee (sudoedit) mode if neither
                      SUDO_EDITOR nor VISUAL is set.

     MAIL             In --ii mode or when _e_n_v___r_e_s_e_t is enabled in _s_u_d_o_e_r_s, set
                      to the mail spool of the target user.

     HOME             Set to the home directory of the target user if --ii or --HH
                      are specified, _e_n_v___r_e_s_e_t or _a_l_w_a_y_s___s_e_t___h_o_m_e are set in
                      _s_u_d_o_e_r_s, or when the --ss option is specified and _s_e_t___h_o_m_e
                      is set in _s_u_d_o_e_r_s.

     PATH             Set to a sane value if the _s_e_c_u_r_e___p_a_t_h option is set in
                      the _s_u_d_o_e_r_s file.

     SHELL            Used to determine shell to run with --ss option.

     SUDO_ASKPASS     Specifies the path to a helper program used to read the
                      password if no terminal is available or if the --AA option
                      is specified.

     SUDO_COMMAND     Set to the command run by sudo.

     SUDO_EDITOR      Default editor to use in --ee (sudoedit) mode.

     SUDO_GID         Set to the group ID of the user who invoked sudo.

     SUDO_PROMPT      Used as the default password prompt.

     SUDO_PS1         If set, PS1 will be set to its value for the program
                      being run.

     SUDO_UID         Set to the user ID of the user who invoked sudo.

     SUDO_USER        Set to the login name of the user who invoked sudo.

     USER             Set to the target user (root unless the --uu option is
                      specified).

     VISUAL           Default editor to use in --ee (sudoedit) mode if
                      SUDO_EDITOR is not set.

FFIILLEESS
     _/_e_t_c_/_s_u_d_o_e_r_s              List of who can run what

     _/_v_a_r_/_a_d_m_/_s_u_d_o             Directory containing time stamps

     _/_e_t_c_/_e_n_v_i_r_o_n_m_e_n_t          Initial environment for --ii mode on AIX and
                               Linux systems

EEXXAAMMPPLLEESS
     Note: the following examples assume suitable sudoers(4) entries.

     To get a file listing of an unreadable directory:

           $ sudo ls /usr/local/protected

     To list the home directory of user yaz on a machine where the file system
     holding ~yaz is not exported as root:

           $ sudo -u yaz ls ~yaz

     To edit the _i_n_d_e_x_._h_t_m_l file as user www:

           $ sudo -u www vi ~www/htdocs/index.html

     To view system logs only accessible to root and users in the adm group:

           $ sudo -g adm view /var/log/syslog

     To run an editor as jim with a different primary group:

           $ sudo -u jim -g audio vi ~jim/sound.txt

     To shut down a machine:

           $ sudo shutdown -r +15 "quick reboot"

     To make a usage listing of the directories in the /home partition.  Note
     that this runs the commands in a sub-shell to make the cd and file
     redirection work.

           $ sudo sh -c "cd /home ; du -s * | sort -rn > USAGE"

SSEEEE AALLSSOO
     grep(1), su(1), stat(2), login_cap(3), passwd(4), sudoers(4),
     sudoreplay(1m), visudo(1m)

HHIISSTTOORRYY
     See the HISTORY file in the ssuuddoo distribution
     (http://www.sudo.ws/sudo/history.html) for a brief history of sudo.

AAUUTTHHOORRSS
     Many people have worked on ssuuddoo over the years; this version consists of
     code written primarily by:

           Todd C. Miller

     See the CONTRIBUTORS file in the ssuuddoo distribution
     (http://www.sudo.ws/sudo/contributors.html) for an exhaustive list of
     people who have contributed to ssuuddoo.

CCAAVVEEAATTSS
     There is no easy way to prevent a user from gaining a root shell if that
     user is allowed to run arbitrary commands via ssuuddoo.  Also, many programs
     (such as editors) allow the user to run commands via shell escapes, thus
     avoiding ssuuddoo's checks.  However, on most systems it is possible to
     prevent shell escapes with ssuuddoo '' ss _n_o_e_x_e_c functionality.  See the
     sudoers(4) manual for details.

     It is not meaningful to run the cd command directly via sudo, e.g.,

           $ sudo cd /usr/local/protected

     since when the command exits the parent process (your shell) will still
     be the same.  Please see the _E_X_A_M_P_L_E_S section for more information.

     Running shell scripts via ssuuddoo can expose the same kernel bugs that make
     setuid shell scripts unsafe on some operating systems (if your OS has a
     /dev/fd/ directory, setuid shell scripts are generally safe).

BBUUGGSS
     If you feel you have found a bug in ssuuddoo, please submit a bug report at
     http://www.sudo.ws/sudo/bugs/

SSUUPPPPOORRTT
     Limited free support is available via the sudo-users mailing list, see
     http://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search the
     archives.

DDIISSCCLLAAIIMMEERR
     ssuuddoo is provided ``AS IS'' and any express or implied warranties,
     including, but not limited to, the implied warranties of merchantability
     and fitness for a particular purpose are disclaimed.  See the LICENSE
     file distributed with ssuuddoo or http://www.sudo.ws/sudo/license.html for
     complete details.

Sudo 1.7.10                      July 10, 2012                     Sudo 1.7.10
